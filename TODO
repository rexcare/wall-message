

// CACH DRIVER (redis driver)
	- add and update docstrings
	X pass in datastore information (dependency injection)
	X batch sets
	X batch gets
	X batch deletes


// DB DRIVER (mysql driver)
	- add and update docstrings
	X add tests for 'by_uuid' methods
	X pass in datastore information (dependency injection)
	X order by, ascending and descending:
		- sample order_props:
			{
				'field': 'col_name',
				'direction': 'asc'|'ascending'|'desc'|'descending'
			}
	- transactions
	- type checking, type consistency


// BASE DATA OBJECT
	- add and update docstrings
	- refactor DB driver and cache driver dependency injection
	- transactions:
		- two or more dataobjects saves with all or nothing commits to database
		- implemented at database driver level?
		- think about interface
		- need rollbacks?
	- think about data type consistency and enforcement
	- asses types of caching currently implemented and research alternatives
	- think about db replication schemes (master->slave vs master->master)
	- think about data consistency problems (in-memory, cache, master, slave)

